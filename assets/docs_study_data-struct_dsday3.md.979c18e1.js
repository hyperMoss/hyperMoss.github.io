import{_ as n,c as a,o as s,a as p}from"./app.9b28d632.js";const m='{"title":"\u6811","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u6811\u7684\u57FA\u672C\u6982\u5FF5","slug":"\u6811\u7684\u57FA\u672C\u6982\u5FF5"},{"level":3,"title":"\u6811\u7684\u5B9A\u4E49","slug":"\u6811\u7684\u5B9A\u4E49"},{"level":3,"title":"\u6811\u7684\u6027\u8D28","slug":"\u6811\u7684\u6027\u8D28"},{"level":2,"title":"\u6811\u7684\u5B58\u50A8\u7ED3\u6784","slug":"\u6811\u7684\u5B58\u50A8\u7ED3\u6784"},{"level":3,"title":"\u987A\u5E8F\u5B58\u50A8\u7ED3\u6784","slug":"\u987A\u5E8F\u5B58\u50A8\u7ED3\u6784"},{"level":2,"title":"\u4E8C\u53C9\u6811","slug":"\u4E8C\u53C9\u6811"},{"level":3,"title":"\u7279\u6B8A\u4E8C\u53C9\u6811","slug":"\u7279\u6B8A\u4E8C\u53C9\u6811"},{"level":3,"title":"\u4E8C\u53C9\u6811\u7684\u6027\u8D28","slug":"\u4E8C\u53C9\u6811\u7684\u6027\u8D28"},{"level":2,"title":"\u4E8C\u53C9\u6811\u7684\u5B58\u50A8\u7ED3\u6784","slug":"\u4E8C\u53C9\u6811\u7684\u5B58\u50A8\u7ED3\u6784"},{"level":3,"title":"\u987A\u5E8F\u5B58\u50A8","slug":"\u987A\u5E8F\u5B58\u50A8"},{"level":3,"title":"\u94FE\u5F0F\u5B58\u50A8","slug":"\u94FE\u5F0F\u5B58\u50A8"},{"level":2,"title":"\u4E8C\u53C9\u6811\u7684\u904D\u5386\uFF08\u9012\u5F52\uFF09","slug":"\u4E8C\u53C9\u6811\u7684\u904D\u5386\uFF08\u9012\u5F52\uFF09"},{"level":3,"title":"\u9012\u5F52\u5148\u5E8F\u904D\u5386","slug":"\u9012\u5F52\u5148\u5E8F\u904D\u5386"},{"level":3,"title":"\u9012\u5F52\u4E2D\u5E8F\u904D\u5386","slug":"\u9012\u5F52\u4E2D\u5E8F\u904D\u5386"},{"level":3,"title":"\u9012\u5F52\u540E\u5E8F\u904D\u5386","slug":"\u9012\u5F52\u540E\u5E8F\u904D\u5386"},{"level":2,"title":"\u4E8C\u53C9\u6811\u7684\u904D\u5386\uFF08\u975E\u9012\u5F52\uFF09","slug":"\u4E8C\u53C9\u6811\u7684\u904D\u5386\uFF08\u975E\u9012\u5F52\uFF09"},{"level":3,"title":"\u975E\u9012\u5F52\u5148\u5E8F\u904D\u5386","slug":"\u975E\u9012\u5F52\u5148\u5E8F\u904D\u5386"},{"level":3,"title":"\u975E\u9012\u5F52\u4E2D\u5E8F\u904D\u5386","slug":"\u975E\u9012\u5F52\u4E2D\u5E8F\u904D\u5386"},{"level":3,"title":"\u975E\u9012\u5F52\u540E\u5E8F\u904D\u5386","slug":"\u975E\u9012\u5F52\u540E\u5E8F\u904D\u5386"},{"level":3,"title":"\u5C42\u5E8F\u904D\u5386","slug":"\u5C42\u5E8F\u904D\u5386"},{"level":2,"title":"\u7EBF\u7D22\u4E8C\u53C9\u6811","slug":"\u7EBF\u7D22\u4E8C\u53C9\u6811"},{"level":2,"title":"\u54C8\u592B\u66FC\u6811\u548C\u54C8\u592B\u66FC\u7F16\u7801","slug":"\u54C8\u592B\u66FC\u6811\u548C\u54C8\u592B\u66FC\u7F16\u7801"}],"relativePath":"docs/study/data-struct/dsday3.md","lastUpdated":1651848170934}',t={},o=p(`<h1 id="\u6811" tabindex="-1">\u6811 <a class="header-anchor" href="#\u6811" aria-hidden="true">#</a></h1><h2 id="\u6811\u7684\u57FA\u672C\u6982\u5FF5" tabindex="-1">\u6811\u7684\u57FA\u672C\u6982\u5FF5 <a class="header-anchor" href="#\u6811\u7684\u57FA\u672C\u6982\u5FF5" aria-hidden="true">#</a></h2><h3 id="\u6811\u7684\u5B9A\u4E49" tabindex="-1">\u6811\u7684\u5B9A\u4E49 <a class="header-anchor" href="#\u6811\u7684\u5B9A\u4E49" aria-hidden="true">#</a></h3><p>\u6811\u662FN\uFF08N\u22650\uFF09\u4E2A\u7ED3\u70B9\u7684\u6709\u9650\u96C6\u5408\uFF0CN=0\u65F6\uFF0C\u79F0\u4E3A\u7A7A\u6811\uFF0C\u662F\u4E00\u79CD\u7279\u6B8A\u60C5\u51B5\u3002\u5728\u4EFB\u610F\u4E00\u68F5\u975E\u7A7A\u6811\u4E2D\u5E94\u6EE1\u8DB3\uFF1A</p><ul><li><p>\u6709\u4E14\u4EC5\u6709\u4E00\u4E2A\u7279\u5B9A\u7684\u79F0\u4E3A\u6839\u7684\u7ED3\u70B9\u3002</p></li><li><p>\u5F53N&gt;1\u65F6\uFF0C\u5176\u4F59\u7ED3\u70B9\u53EF\u5206\u4E3Am\uFF08m&gt;0\uFF09</p></li></ul><p>\u4E2A\u4E92\u4E0D\u76F8\u4EA4\u7684\u6709\u9650\u96C6\u5408T1\uFF0CT2\uFF0C\u2026\uFF0CTm\uFF0C \u5176\u4E2D\u6BCF\u4E00\u4E2A\u96C6\u5408\u672C\u8EAB\u53C8\u662F\u4E00\u68F5\u6811\uFF0C\u5E76\u4E14 \u79F0\u4E3A\u6839\u7ED3\u70B9\u7684\u5B50\u6811\u3002</p><h3 id="\u6811\u7684\u6027\u8D28" tabindex="-1">\u6811\u7684\u6027\u8D28 <a class="header-anchor" href="#\u6811\u7684\u6027\u8D28" aria-hidden="true">#</a></h3><ul><li><p>\u6811\u4E2D\u7684\u7ED3\u70B9\u6570\u7B49\u4E8E\u6240\u6709\u7ED3\u70B9\u7684\u5EA6\u6570\u52A01\u3002</p></li><li><p>\u5EA6\u4E3Am\u7684\u6811\u4E2D\u7B2Ci\u5C42\u4E0A\u81F3\u591A\u6709mi\u22121\u4E2A\u7ED3\u70B9\uFF08i\u22651\uFF09\u3002</p></li><li><p>\u9AD8\u5EA6\u4E3Ah\u7684m\u53C9\u6811\u81F3\u591A\u6709(mh</p></li></ul><p>-1)/(m-1)\u4E2A\u7ED3\u70B9</p><h2 id="\u6811\u7684\u5B58\u50A8\u7ED3\u6784" tabindex="-1">\u6811\u7684\u5B58\u50A8\u7ED3\u6784 <a class="header-anchor" href="#\u6811\u7684\u5B58\u50A8\u7ED3\u6784" aria-hidden="true">#</a></h2><h3 id="\u987A\u5E8F\u5B58\u50A8\u7ED3\u6784" tabindex="-1">\u987A\u5E8F\u5B58\u50A8\u7ED3\u6784 <a class="header-anchor" href="#\u987A\u5E8F\u5B58\u50A8\u7ED3\u6784" aria-hidden="true">#</a></h3><h4 id="\u53CC\u4EB2\u8868\u793A\u6CD5" tabindex="-1">\u53CC\u4EB2\u8868\u793A\u6CD5 <a class="header-anchor" href="#\u53CC\u4EB2\u8868\u793A\u6CD5" aria-hidden="true">#</a></h4><p>\u53CC\u4EB2\u8868\u793A\u6CD5\uFF1A\u7528\u4E00\u7EC4\u8FDE\u7EED\u7684\u5B58\u50A8\u7A7A\u95F4\u5B58\u50A8\u6811\u7684\u7ED3\u70B9\uFF0C\u540C\u65F6\u5728\u6BCF\u4E2A\u7ED3\u70B9\u4E2D\uFF0C\u7528\u4E00\u4E2A\u53D8\u91CF\u5B58\u50A8\u8BE5\u7ED3\u70B9\u7684\u53CC\u4EB2\u7ED3\u70B9\u5728\u6570\u7EC4\u4E2D\u7684\u4F4D\u7F6E\u3002</p><div class="language-c"><pre><code><span class="token keyword">typedef</span> <span class="token keyword">char</span> ElemType<span class="token punctuation">;</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">TNode</span><span class="token punctuation">{</span>
ElemType data<span class="token punctuation">;</span> <span class="token comment">//\u7ED3\u70B9\u6570\u636E</span>
<span class="token keyword">int</span> parent<span class="token punctuation">;</span> <span class="token comment">//\u8BE5\u7ED3\u70B9\u53CC\u4EB2\u5728\u6570\u7EC4\u4E2D\u7684\u4E0B\u6807</span>
<span class="token punctuation">}</span>TNode<span class="token punctuation">;</span> <span class="token comment">//\u7ED3\u70B9\u6570\u636E\u7C7B\u578B</span>
data parent
\u7ED3\u70B9\u7C7B\u578B
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">Maxsize</span> <span class="token expression"><span class="token number">100</span></span></span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
TNode nodes<span class="token punctuation">[</span>MaxSize<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//\u7ED3\u70B9\u6570\u7EC4</span>
<span class="token keyword">int</span> n<span class="token punctuation">;</span> <span class="token comment">//\u7ED3\u70B9\u6570\u91CF</span>
<span class="token punctuation">}</span>Tree<span class="token punctuation">;</span> <span class="token comment">//\u6811\u7684\u53CC\u4EB2\u8868\u793A\u7ED3\u6784</span>
</code></pre></div><h4 id="\u5B69\u5B50\u8868\u793A\u6CD5" tabindex="-1">\u5B69\u5B50\u8868\u793A\u6CD5 <a class="header-anchor" href="#\u5B69\u5B50\u8868\u793A\u6CD5" aria-hidden="true">#</a></h4><p>\u628A\u6BCF\u4E2A\u7ED3\u70B9\u7684\u5B69\u5B50\u7ED3\u70B9\u6392\u5217\u8D77\u6765\u5B58\u50A8\u6210\u4E00\u4E2A\u5355\u94FE\u8868\u3002\u6240\u4EE5n\u4E2A\u7ED3\u70B9\u5C31\u6709n\u4E2A\u94FE\u8868\uFF1B \u5982\u679C\u662F\u53F6\u5B50\u7ED3\u70B9\uFF0C\u90A3\u8FD9\u4E2A\u7ED3\u70B9\u7684\u5B69\u5B50\u5355\u94FE\u8868\u5C31\u662F\u7A7A\u7684\uFF1B \u7136\u540En\u4E2A\u5355\u94FE\u8868\u7684\u7684\u5934\u6307\u9488\u53C8\u5B58\u50A8\u5728\u4E00\u4E2A\u987A\u5E8F\u8868\uFF08\u6570\u7EC4\uFF09\u4E2D\u3002</p><div class="language-c"><pre><code><span class="token keyword">typedef</span> <span class="token keyword">char</span> ElemType<span class="token punctuation">;</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">CNode</span><span class="token punctuation">{</span>
<span class="token keyword">int</span> child<span class="token punctuation">;</span> <span class="token comment">//\u8BE5\u5B69\u5B50\u5728\u8868\u5934\u6570\u7EC4\u7684\u4E0B\u6807</span>
<span class="token keyword">struct</span> <span class="token class-name">CNode</span> <span class="token operator">*</span>next<span class="token punctuation">;</span> <span class="token comment">//\u6307\u5411\u8BE5\u7ED3\u70B9\u7684\u4E0B\u4E00\u4E2A\u5B69\u5B50\u7ED3\u70B9</span>
<span class="token punctuation">}</span>CNode\uFF0C<span class="token operator">*</span>Child<span class="token punctuation">;</span> <span class="token comment">//\u5B69\u5B50\u7ED3\u70B9\u6570\u636E\u7C7B\u578B</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
Elemtype data<span class="token punctuation">;</span> <span class="token comment">//\u7ED3\u70B9\u6570\u636E\u57DF</span>
Child firstchild<span class="token punctuation">;</span> <span class="token comment">//\u6307\u5411\u8BE5\u7ED3\u70B9\u7684\u7B2C\u4E00\u4E2A\u5B69\u5B50\u7ED3\u70B9</span>
<span class="token punctuation">}</span>TNode<span class="token punctuation">;</span> <span class="token comment">//\u5B69\u5B50\u7ED3\u70B9\u6570\u636E\u7C7B\u578B</span>

</code></pre></div><h4 id="\u5B69\u5B50\u5144\u5F1F\u8868\u793A\u6CD5" tabindex="-1">\u5B69\u5B50\u5144\u5F1F\u8868\u793A\u6CD5 <a class="header-anchor" href="#\u5B69\u5B50\u5144\u5F1F\u8868\u793A\u6CD5" aria-hidden="true">#</a></h4><p>\u5B69\u5B50\u5144\u5F1F\u8868\u793A\u6CD5\uFF1A\u987E\u540D\u601D\u4E49\u5C31\u662F\u8981\u5B58\u50A8\u5B69\u5B50\u548C\u5B69\u5B50\u7ED3\u70B9\u7684\u5144\u5F1F\uFF0C\u5177\u4F53\u6765\u8BF4\uFF0C\u5C31\u662F\u8BBE\u7F6E\u4E24\u4E2A\u6307\u9488\uFF0C\u5206\u522B\u6307\u5411\u8BE5\u7ED3 \u70B9\u7684\u7B2C\u4E00\u4E2A\u5B69\u5B50\u7ED3\u70B9\u548C\u8FD9\u4E2A\u5B69\u5B50\u7ED3\u70B9\u7684\u53F3\u5144\u5F1F\u7ED3\u70B9\u3002</p><div class="language-c"><pre><code><span class="token keyword">typedef</span> <span class="token keyword">char</span> ElemType<span class="token punctuation">;</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">CSNode</span><span class="token punctuation">{</span>
ElemType data<span class="token punctuation">;</span> <span class="token comment">//\u8BE5\u7ED3\u70B9\u7684\u6570\u636E\u57DF</span>
<span class="token keyword">struct</span> <span class="token class-name">CSNode</span> <span class="token operator">*</span>firstchild<span class="token punctuation">,</span><span class="token operator">*</span>rightsib<span class="token punctuation">;</span> <span class="token comment">//\u6307\u5411\u8BE5\u7ED3\u70B9\u7684\u7B2C\u4E00\u4E2A\u5B69\u5B50\u7ED3\u70B9\u548C\u8BE5\u7ED3\u70B9\u7684\u53F3\u5144\u5F1F\u7ED3\u70B9</span>
<span class="token punctuation">}</span>CSNode<span class="token punctuation">;</span>
</code></pre></div><h2 id="\u4E8C\u53C9\u6811" tabindex="-1">\u4E8C\u53C9\u6811 <a class="header-anchor" href="#\u4E8C\u53C9\u6811" aria-hidden="true">#</a></h2><p>\u4E8C\u53C9\u6811\u662Fn\uFF08n\u22650\uFF09\u4E2A\u7ED3\u70B9\u7684\u6709\u9650\u96C6\u5408\uFF1A</p><ul><li>\u6216\u8005\u4E3A\u7A7A\u4E8C\u53C9\u6811\uFF0C\u5373n=0\u3002</li><li>\u6216\u8005\u7531\u4E00\u4E2A\u6839\u7ED3\u70B9\u548C\u4E24\u4E2A\u4E92\u4E0D\u76F8\u4EA4\u7684\u88AB\u79F0\u4E3A\u6839\u7684\u5DE6\u5B50\u6811\u548C\u53F3\u5B50\u6811\u7EC4\u6210\u3002\u5DE6\u5B50\u6811\u548C\u53F3\u5B50\u6811\u53C8\u5206\u522B\u662F\u4E00\u68F5\u4E8C\u53C9\u6811\u3002</li></ul><p>\u4E8C\u53C9\u6811\u7684\u4E94\u79CD\u57FA\u672C\u5F62\u6001\uFF1A</p><ul><li>\u7A7A\u6811</li><li>\u53EA\u6709\u4E00\u4E2A\u6839\u7ED3\u70B9</li><li>\u6839\u7ED3\u70B9\u53EA\u6709\u5DE6\u5B50\u6811</li><li>\u6839\u7ED3\u70B9\u53EA\u6709\u53F3\u5B50\u6811</li><li>\u6839\u7ED3\u70B9\u65E2\u6709\u5DE6\u5B50\u6811\u53C8\u6709\u53F3\u5B50\u6811</li></ul><h3 id="\u7279\u6B8A\u4E8C\u53C9\u6811" tabindex="-1">\u7279\u6B8A\u4E8C\u53C9\u6811 <a class="header-anchor" href="#\u7279\u6B8A\u4E8C\u53C9\u6811" aria-hidden="true">#</a></h3><ul><li>\u659C\u6811</li><li>\u6EE1\u4E8C\u53C9\u6811</li><li>\u5B8C\u5168\u4E8C\u53C9\u6811</li></ul><h3 id="\u4E8C\u53C9\u6811\u7684\u6027\u8D28" tabindex="-1">\u4E8C\u53C9\u6811\u7684\u6027\u8D28 <a class="header-anchor" href="#\u4E8C\u53C9\u6811\u7684\u6027\u8D28" aria-hidden="true">#</a></h3><ul><li>\u975E\u7A7A\u4E8C\u53C9\u6811\u4E0A\u53F6\u5B50\u7ED3\u70B9\u6570\u7B49\u4E8E\u5EA6\u4E3A2\u7684\u7ED3\u70B9\u6570\u52A01</li><li>\u975E\u7A7A\u4E8C\u53C9\u6811\u4E0A\u7B2CK\u5C42\u4E0A\u81F3\u591A\u67092k\u22121\u4E2A\u7ED3\u70B9\uFF08K\u22651\uFF09</li><li>\u9AD8\u5EA6\u4E3AH\u7684\u4E8C\u53C9\u6811\u81F3\u591A\u67092H-1\u4E2A\u7ED3\u70B9\uFF08H\u22651\uFF09</li><li>\u5177\u6709N\u4E2A\uFF08N&gt;0\uFF09\u7ED3\u70B9\u7684\u5B8C\u5168\u4E8C\u53C9\u6811\u7684\u9AD8\u5EA6\u4E3A log2(N+1)\u6216log2N+1\u3002</li></ul><h2 id="\u4E8C\u53C9\u6811\u7684\u5B58\u50A8\u7ED3\u6784" tabindex="-1">\u4E8C\u53C9\u6811\u7684\u5B58\u50A8\u7ED3\u6784 <a class="header-anchor" href="#\u4E8C\u53C9\u6811\u7684\u5B58\u50A8\u7ED3\u6784" aria-hidden="true">#</a></h2><h3 id="\u987A\u5E8F\u5B58\u50A8" tabindex="-1">\u987A\u5E8F\u5B58\u50A8 <a class="header-anchor" href="#\u987A\u5E8F\u5B58\u50A8" aria-hidden="true">#</a></h3><p>\u6309\u5C42\u5E8F\u904D\u5386 \u5B58\u50A8\u5728\u6570\u7EC4\u4E2D</p><h3 id="\u94FE\u5F0F\u5B58\u50A8" tabindex="-1">\u94FE\u5F0F\u5B58\u50A8 <a class="header-anchor" href="#\u94FE\u5F0F\u5B58\u50A8" aria-hidden="true">#</a></h3><p>\u4E8C\u53C9\u6811\u6BCF\u4E2A\u7ED3\u70B9\u6700\u591A\u4E24\u4E2A\u5B69\u5B50\uFF0C\u6240\u4EE5\u8BBE\u8BA1\u4E8C\u53C9\u6811\u7684\u7ED3\u70B9\u7ED3\u6784\u65F6\u8003\u8651\u4E24\u4E2A\u6307\u9488\u6307\u5411\u8BE5\u7ED3\u70B9\u7684\u4E24\u4E2A\u5B69\u5B50\u3002</p><div class="language-c"><pre><code><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">BiTNode</span><span class="token punctuation">{</span>
ElemType data<span class="token punctuation">;</span> <span class="token comment">//\u6570\u636E\u57DF</span>
<span class="token keyword">struct</span> <span class="token class-name">BiTNode</span> <span class="token operator">*</span>lchild<span class="token punctuation">,</span><span class="token operator">*</span>rchild<span class="token punctuation">;</span> <span class="token comment">//\u6307\u5411\u8BE5\u7ED3\u70B9\u7684\u5DE6\u3001\u53F3\u5B69\u5B50\u6307\u9488</span>
<span class="token punctuation">}</span>BiTNode<span class="token punctuation">,</span><span class="token operator">*</span>BiTree<span class="token punctuation">;</span> <span class="token comment">//\u4E8C\u53C9\u6811\u7ED3\u70B9\u7ED3\u6784</span>
</code></pre></div><h2 id="\u4E8C\u53C9\u6811\u7684\u904D\u5386\uFF08\u9012\u5F52\uFF09" tabindex="-1">\u4E8C\u53C9\u6811\u7684\u904D\u5386\uFF08\u9012\u5F52\uFF09 <a class="header-anchor" href="#\u4E8C\u53C9\u6811\u7684\u904D\u5386\uFF08\u9012\u5F52\uFF09" aria-hidden="true">#</a></h2><h3 id="\u9012\u5F52\u5148\u5E8F\u904D\u5386" tabindex="-1">\u9012\u5F52\u5148\u5E8F\u904D\u5386 <a class="header-anchor" href="#\u9012\u5F52\u5148\u5E8F\u904D\u5386" aria-hidden="true">#</a></h3><p>ROOT LEFT RIGHT</p><div class="language-c"><pre><code><span class="token keyword">void</span> <span class="token function">PreOrder</span><span class="token punctuation">(</span>BiTree T<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>T<span class="token operator">!=</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">printf</span><span class="token punctuation">(</span>\u201C<span class="token operator">%</span>c\u201D<span class="token punctuation">,</span>T<span class="token operator">-&gt;</span>data<span class="token punctuation">)</span> <span class="token comment">//\u8BBF\u95EE\u6839\u7ED3\u70B9</span>
<span class="token function">PreOrder</span><span class="token punctuation">(</span>T<span class="token operator">-&gt;</span>lchild<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u9012\u5F52\u904D\u5386\u5DE6\u5B50\u6811</span>
<span class="token function">PreOrder</span><span class="token punctuation">(</span>T<span class="token operator">-&gt;</span>rchild<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u9012\u5F52\u904D\u5386\u53F3\u5B50\u6811</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u9012\u5F52\u4E2D\u5E8F\u904D\u5386" tabindex="-1">\u9012\u5F52\u4E2D\u5E8F\u904D\u5386 <a class="header-anchor" href="#\u9012\u5F52\u4E2D\u5E8F\u904D\u5386" aria-hidden="true">#</a></h3><p>LEFT ROOT RIGHT</p><div class="language-c"><pre><code><span class="token keyword">void</span> <span class="token function">InOrder</span><span class="token punctuation">(</span>BiTree T<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>T<span class="token operator">!=</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">InOrder</span><span class="token punctuation">(</span>T<span class="token operator">-&gt;</span>lchild<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u9012\u5F52\u904D\u5386\u5DE6\u5B50\u6811</span>
<span class="token function">printf</span><span class="token punctuation">(</span>\u201C<span class="token operator">%</span>c\u201D<span class="token punctuation">,</span>T<span class="token operator">-&gt;</span>data<span class="token punctuation">)</span>\uFF1B <span class="token comment">//\u8BBF\u95EE\u6839\u7ED3\u70B9</span>
<span class="token function">InOrder</span><span class="token punctuation">(</span>T<span class="token operator">-&gt;</span>rchild<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u9012\u5F52\u904D\u5386\u53F3\u5B50\u6811</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u9012\u5F52\u540E\u5E8F\u904D\u5386" tabindex="-1">\u9012\u5F52\u540E\u5E8F\u904D\u5386 <a class="header-anchor" href="#\u9012\u5F52\u540E\u5E8F\u904D\u5386" aria-hidden="true">#</a></h3><p>LEFT RIGHT ROOT</p><div class="language-c"><pre><code><span class="token keyword">void</span> <span class="token function">PostOrder</span><span class="token punctuation">(</span>BiTree T<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>T<span class="token operator">!=</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">PostOrder</span><span class="token punctuation">(</span>T<span class="token operator">-&gt;</span>lchild<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u9012\u5F52\u904D\u5386\u5DE6\u5B50\u6811</span>
<span class="token function">PostOrder</span><span class="token punctuation">(</span>T<span class="token operator">-&gt;</span>rchild<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u9012\u5F52\u904D\u5386\u53F3\u5B50\u6811</span>
<span class="token function">printf</span><span class="token punctuation">(</span>\u201C<span class="token operator">%</span>c\u201D<span class="token punctuation">,</span>T<span class="token operator">-&gt;</span>data<span class="token punctuation">)</span>\uFF1B <span class="token comment">//\u8BBF\u95EE\u6839\u7ED3\u70B9</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u4E8C\u53C9\u6811\u7684\u904D\u5386\uFF08\u975E\u9012\u5F52\uFF09" tabindex="-1">\u4E8C\u53C9\u6811\u7684\u904D\u5386\uFF08\u975E\u9012\u5F52\uFF09 <a class="header-anchor" href="#\u4E8C\u53C9\u6811\u7684\u904D\u5386\uFF08\u975E\u9012\u5F52\uFF09" aria-hidden="true">#</a></h2><h3 id="\u975E\u9012\u5F52\u5148\u5E8F\u904D\u5386" tabindex="-1">\u975E\u9012\u5F52\u5148\u5E8F\u904D\u5386 <a class="header-anchor" href="#\u975E\u9012\u5F52\u5148\u5E8F\u904D\u5386" aria-hidden="true">#</a></h3><p>ROOT LEFT RIGHT</p><div class="language-c"><pre><code>Void <span class="token function">PreOrderTraverse</span><span class="token punctuation">(</span>BiTree b<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">InitStack</span><span class="token punctuation">(</span>S<span class="token punctuation">)</span><span class="token punctuation">;</span>
    BiTree p<span class="token operator">=</span>b<span class="token punctuation">;</span> <span class="token comment">//\u5DE5\u4F5C\u6307\u9488p</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>p <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">IsEmpty</span><span class="token punctuation">(</span>S<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
     <span class="token keyword">while</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">{</span>
     <span class="token function">printf</span><span class="token punctuation">(</span>\u201C<span class="token operator">%</span>c\u201D<span class="token punctuation">,</span>p<span class="token operator">-&gt;</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u5148\u5E8F\u5148\u904D\u5386\u7ED3\u70B9</span>
        <span class="token function">Push</span><span class="token punctuation">(</span>S<span class="token punctuation">,</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u8FDB\u6808\u4FDD\u5B58</span>
        p<span class="token operator">=</span>p<span class="token operator">-&gt;</span>lchild<span class="token punctuation">;</span> 
         <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">IsEmpty</span><span class="token punctuation">(</span>S<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        p<span class="token operator">=</span><span class="token function">Pop</span><span class="token punctuation">(</span>S<span class="token punctuation">)</span><span class="token punctuation">;</span>
         p<span class="token operator">=</span>p<span class="token operator">-&gt;</span>rchild<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u975E\u9012\u5F52\u4E2D\u5E8F\u904D\u5386" tabindex="-1">\u975E\u9012\u5F52\u4E2D\u5E8F\u904D\u5386 <a class="header-anchor" href="#\u975E\u9012\u5F52\u4E2D\u5E8F\u904D\u5386" aria-hidden="true">#</a></h3><p>LEFT ROOT RIGHT</p><div class="language-c"><pre><code>Void <span class="token function">PreOrderTraverse</span><span class="token punctuation">(</span>BiTree b<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">InitStack</span><span class="token punctuation">(</span>S<span class="token punctuation">)</span><span class="token punctuation">;</span>
    BiTree p<span class="token operator">=</span>b<span class="token punctuation">;</span> <span class="token comment">//\u5DE5\u4F5C\u6307\u9488p</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>p <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">IsEmpty</span><span class="token punctuation">(</span>S<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">//\u4E2D\u5E8F\u5148\u5C06\u7ED3\u70B9\u8FDB\u6808\u4FDD\u5B58</span>
        <span class="token function">Push</span><span class="token punctuation">(</span>S<span class="token punctuation">,</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
        p<span class="token operator">=</span>p<span class="token operator">-&gt;</span>lchild<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
    <span class="token comment">//\u904D\u5386\u5230\u5DE6\u4E0B\u89D2\u5C3D\u5934\u518D\u51FA\u6808\u8BBF\u95EE</span>
    p<span class="token operator">=</span><span class="token function">Pop</span><span class="token punctuation">(</span>S<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span>\u201C<span class="token operator">%</span>c\u201D<span class="token punctuation">,</span>p<span class="token operator">-&gt;</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    p<span class="token operator">=</span>p<span class="token operator">-&gt;</span>rchild<span class="token punctuation">;</span> <span class="token comment">//\u904D\u5386\u53F3\u5B69\u5B50</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u975E\u9012\u5F52\u540E\u5E8F\u904D\u5386" tabindex="-1">\u975E\u9012\u5F52\u540E\u5E8F\u904D\u5386 <a class="header-anchor" href="#\u975E\u9012\u5F52\u540E\u5E8F\u904D\u5386" aria-hidden="true">#</a></h3><p>LEFT RIGHT ROOT</p><div class="language-c"><pre><code>Void <span class="token function">PostOrderTraverse</span><span class="token punctuation">(</span>BiTree b<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">InitStack</span><span class="token punctuation">(</span>S<span class="token punctuation">)</span><span class="token punctuation">;</span>
    BiTree p<span class="token operator">=</span>b\uFF0Cr<span class="token operator">=</span><span class="token constant">NULL</span><span class="token punctuation">;</span> <span class="token comment">//\u5DE5\u4F5C\u6307\u9488p \u8F85\u52A9\u6307\u9488r</span>
     <span class="token keyword">while</span><span class="token punctuation">(</span>p <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">IsEmpty</span><span class="token punctuation">(</span>S<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//1.\u4ECE\u6839\u7ED3\u70B9\u5230\u6700\u5DE6\u4E0B\u89D2\u7684\u5DE6\u5B50\u6811\u90FD\u5165\u6808</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">{</span> 
        <span class="token function">Push</span><span class="token punctuation">(</span>S<span class="token punctuation">,</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
        p<span class="token operator">=</span>p<span class="token operator">-&gt;</span>lchild<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> 
    <span class="token comment">//2.\u8FD4\u56DE\u6808\u9876\u7684\u4E24\u79CD\u60C5\u51B5</span>
    <span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token function">GetTop</span><span class="token punctuation">(</span>S<span class="token punctuation">,</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u53D6\u6808\u9876 \u6CE8\u610F\u4E0D\u662F\u51FA\u6808\uFF01</span>
    <span class="token comment">//\u2460\u53F3\u5B50\u6811\u8FD8\u672A\u8BBF\u95EE\uFF0C\u800C\u4E14\u53F3\u5B50\u6811\u4E0D\u7A7A\uFF0C\u7B2C\u4E00\u6B21\u6808\u9876</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token operator">-&gt;</span>rchild <span class="token operator">&amp;&amp;</span>p<span class="token operator">-&gt;</span>rchild <span class="token operator">!=</span>r<span class="token punctuation">)</span> p<span class="token operator">=</span>p<span class="token operator">-&gt;</span>rchild<span class="token punctuation">;</span>
    <span class="token comment">//\u2461\u53F3\u5B50\u6811\u5DF2\u7ECF\u8BBF\u95EE\u6216\u4E3A\u7A7A\uFF0C\u63A5\u4E0B\u6765\u51FA\u6808\u8BBF\u95EE\u7ED3\u70B9</span>
    <span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token function">Pop</span><span class="token punctuation">(</span>S<span class="token punctuation">,</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printf</span><span class="token punctuation">(</span>\u201C<span class="token operator">%</span>c\u201D<span class="token punctuation">,</span>p<span class="token operator">-&gt;</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        r<span class="token operator">=</span>p<span class="token punctuation">;</span> <span class="token comment">//\u6307\u5411\u8BBF\u95EE\u8FC7\u7684\u53F3\u5B50\u6811\u6839\u7ED3\u70B9</span>
        p<span class="token operator">=</span><span class="token constant">NULL</span><span class="token punctuation">;</span> <span class="token comment">//\u4F7Fp\u4E3A\u7A7A\u4ECE\u800C\u7EE7\u7EED\u8BBF\u95EE\u6808\u9876</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div><h3 id="\u5C42\u5E8F\u904D\u5386" tabindex="-1">\u5C42\u5E8F\u904D\u5386 <a class="header-anchor" href="#\u5C42\u5E8F\u904D\u5386" aria-hidden="true">#</a></h3><div class="language-c"><pre><code><span class="token keyword">void</span> <span class="token function">LevelOrder</span><span class="token punctuation">(</span>BiTree b<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">InitQueue</span><span class="token punctuation">(</span>Q<span class="token punctuation">)</span><span class="token punctuation">;</span>
    BiTree p<span class="token punctuation">;</span>
    <span class="token function">EnQueue</span><span class="token punctuation">(</span>Q<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u6839\u7ED3\u70B9\u8FDB\u961F</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">IsEmpty</span><span class="token punctuation">(</span>Q<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">//\u961F\u5217\u4E0D\u7A7A\u5FAA\u73AF</span>
        <span class="token function">DeQueue</span><span class="token punctuation">(</span>Q\uFF0Cp<span class="token punctuation">)</span> <span class="token comment">//\u961F\u5934\u5143\u7D20\u51FA\u961F</span>
        <span class="token function">printf</span><span class="token punctuation">(</span>\u201C<span class="token operator">%</span>c\u201D<span class="token punctuation">,</span>p<span class="token operator">-&gt;</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token operator">-&gt;</span>lchild<span class="token operator">!=</span><span class="token constant">NULL</span><span class="token punctuation">)</span>
            <span class="token function">EnQueue</span><span class="token punctuation">(</span>Q<span class="token punctuation">,</span>p<span class="token operator">-&gt;</span>lchild<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token operator">-&gt;</span>rchild<span class="token operator">!=</span><span class="token constant">NULL</span><span class="token punctuation">)</span>
            <span class="token function">EnQueue</span><span class="token punctuation">(</span>Q<span class="token punctuation">,</span>p<span class="token operator">-&gt;</span>rchild<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div><h2 id="\u7EBF\u7D22\u4E8C\u53C9\u6811" tabindex="-1">\u7EBF\u7D22\u4E8C\u53C9\u6811 <a class="header-anchor" href="#\u7EBF\u7D22\u4E8C\u53C9\u6811" aria-hidden="true">#</a></h2><p>\u5B9A\u4E49</p><div class="language-c"><pre><code><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">ThreadNode</span><span class="token punctuation">{</span>
ElemType data<span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token class-name">ThreadNode</span> <span class="token operator">*</span>lchild<span class="token punctuation">,</span><span class="token operator">*</span>rchild<span class="token punctuation">;</span>
<span class="token keyword">int</span> ltag<span class="token punctuation">,</span>rtag<span class="token punctuation">;</span>
<span class="token punctuation">}</span>ThreadNode<span class="token punctuation">,</span><span class="token operator">*</span>ThreadTree<span class="token punctuation">;</span> <span class="token comment">//\u7EBF\u7D22\u94FE\u8868</span>
</code></pre></div><p>\u6784\u9020</p><div class="language-c"><pre><code><span class="token keyword">void</span> <span class="token function">InThread</span><span class="token punctuation">(</span>ThreadTree <span class="token operator">&amp;</span>p<span class="token punctuation">,</span>ThreadTree <span class="token operator">&amp;</span>pre<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token comment">//\u4E2D\u5E8F\u904D\u5386\u5BF9\u4E8C\u53C9\u6811\u7EBF\u7D22\u5316\u7684\u9012\u5F52\u7B97\u6CD5</span>
 <span class="token keyword">void</span> <span class="token function">InThread</span><span class="token punctuation">(</span>ThreadTree <span class="token operator">&amp;</span>p<span class="token punctuation">,</span>ThreadTree <span class="token operator">&amp;</span>pre<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token comment">//\u4E2D\u5E8F\u904D\u5386\u5BF9\u4E8C\u53C9\u6811\u7EBF\u7D22\u5316\u7684\u9012\u5F52\u7B97\u6CD5</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">InThread</span><span class="token punctuation">(</span>p<span class="token operator">-&gt;</span>lchild<span class="token punctuation">,</span>pre<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token operator">-&gt;</span>lchild<span class="token operator">==</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            p<span class="token operator">-&gt;</span>lchild<span class="token operator">=</span>pre<span class="token punctuation">;</span>
            p<span class="token operator">-&gt;</span>ltag<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>pre<span class="token operator">!=</span><span class="token constant">NULL</span><span class="token operator">&amp;&amp;</span>pre<span class="token operator">-&gt;</span>rchild<span class="token operator">==</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        pre<span class="token operator">-&gt;</span>rchild<span class="token operator">=</span>p<span class="token punctuation">;</span>
        pre<span class="token operator">-&gt;</span>rtag<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    pre<span class="token operator">=</span>p<span class="token punctuation">;</span>
    <span class="token function">InThread</span><span class="token punctuation">(</span>p<span class="token operator">-&gt;</span>rchild<span class="token punctuation">,</span>pre<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u904D\u5386</p><div class="language-c"><pre><code><span class="token keyword">void</span> <span class="token function">InOrderTraverse</span><span class="token punctuation">(</span>ThreadTree T<span class="token punctuation">)</span><span class="token punctuation">{</span>
    ThreadTree p<span class="token operator">=</span>T\uFF1B
    <span class="token keyword">while</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>p<span class="token operator">-&gt;</span>ltag<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>p<span class="token operator">=</span>p<span class="token operator">-&gt;</span>lchild<span class="token punctuation">;</span>
            <span class="token function">printf</span><span class="token punctuation">(</span>\u201C<span class="token operator">%</span>c\u201D<span class="token punctuation">,</span>p<span class="token operator">-&gt;</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>p<span class="token operator">-&gt;</span>rtag<span class="token operator">==</span><span class="token number">1</span><span class="token operator">&amp;&amp;</span>p<span class="token operator">-&gt;</span>rchild<span class="token punctuation">)</span><span class="token punctuation">{</span>
            p<span class="token operator">=</span>p<span class="token operator">-&gt;</span>rchild<span class="token punctuation">;</span>
            <span class="token function">printf</span><span class="token punctuation">(</span>\u201C<span class="token operator">%</span>c\u201D<span class="token punctuation">,</span>p<span class="token operator">-&gt;</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    p<span class="token operator">=</span>p<span class="token operator">-&gt;</span>rchild<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div><h2 id="\u54C8\u592B\u66FC\u6811\u548C\u54C8\u592B\u66FC\u7F16\u7801" tabindex="-1">\u54C8\u592B\u66FC\u6811\u548C\u54C8\u592B\u66FC\u7F16\u7801 <a class="header-anchor" href="#\u54C8\u592B\u66FC\u6811\u548C\u54C8\u592B\u66FC\u7F16\u7801" aria-hidden="true">#</a></h2><p>\u7B97\u6CD5\u7684\u63CF\u8FF0\u5982\u4E0B\uFF1A</p><ol><li>\u5C06\u8FD9N\u4E2A\u7ED3\u70B9\u5206\u522B\u4F5C\u4E3AN\u68F5\u4EC5\u542B\u4E00\u4E2A\u7ED3\u70B9\u7684\u4E8C\u53C9\u6811\uFF0C\u6784\u6210\u68EE\u6797F\u3002</li><li>\u6784\u9020\u4E00\u4E2A\u65B0\u7ED3\u70B9\uFF0C\u5E76\u4ECEF\u4E2D\u9009\u53D6\u4E24\u68F5\u6839\u7ED3\u70B9\u6743\u503C\u6700\u5C0F\u7684\u6811\u4F5C\u4E3A\u65B0\u7ED3\u70B9\u7684\u5DE6\u3001\u53F3\u5B50\u6811\uFF0C\u5E76\u4E14\u5C06\u65B0\u7ED3\u70B9\u7684\u6743\u503C\u7F6E\u4E3A\u5DE6\u3001\u53F3\u5B50\u6811\u4E0A\u6839\u7ED3\u70B9\u7684\u6743\u503C\u4E4B\u548C\u3002</li><li>\u4ECEF\u4E2D\u5220\u9664\u521A\u624D\u9009\u51FA\u7684\u4E24\u68F5\u6811\uFF0C\u540C\u65F6\u5C06\u65B0\u5F97\u5230\u7684\u6811\u52A0\u5165F\u4E2D\u3002</li><li>\u91CD\u590D\u6B65\u9AA42\uFF09\u548C3\uFF09\uFF0C\u76F4\u81F3F\u4E2D\u53EA\u5269\u4E0B\u4E00\u68F5\u6811\u4E3A\u6B62\u3002</li></ol>`,67),e=[o];function c(l,u,i,k,r,d){return s(),a("div",null,e)}var f=n(t,[["render",c]]);export{m as __pageData,f as default};
