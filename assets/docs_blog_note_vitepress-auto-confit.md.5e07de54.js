import{_ as n,c as s,o as a,a as t}from"./app.5c8eaff9.js";const m='{"title":"vitepress \u81EA\u52A8\u914D\u7F6E\u76EE\u5F55","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u660E\u786E\u9700\u6C42","slug":"\u660E\u786E\u9700\u6C42"},{"level":2,"title":"\u601D\u8DEF","slug":"\u601D\u8DEF"}],"relativePath":"docs/blog/note/vitepress-auto-confit.md","lastUpdated":1653126730512}',p={},o=t(`<h1 id="vitepress-\u81EA\u52A8\u914D\u7F6E\u76EE\u5F55" tabindex="-1">vitepress \u81EA\u52A8\u914D\u7F6E\u76EE\u5F55 <a class="header-anchor" href="#vitepress-\u81EA\u52A8\u914D\u7F6E\u76EE\u5F55" aria-hidden="true">#</a></h1><p>\u56E0\u4E3A\u4F7F\u7528\u7684vitepress\u5E76\u4E0D\u80FD\u4F7F\u7528vite\u7684plugin\uFF0C\u60F3\u5230\u53CD\u6B63config\u4E5F\u662Fjs\u6587\u4EF6\uFF0C\u4E0D\u5982\u76F4\u63A5\u5728\u5176\u4E2D\u751F\u6210\u914D\u7F6E</p><h2 id="\u660E\u786E\u9700\u6C42" tabindex="-1">\u660E\u786E\u9700\u6C42 <a class="header-anchor" href="#\u660E\u786E\u9700\u6C42" aria-hidden="true">#</a></h2><p>\u901A\u8FC7\u76EE\u5F55\u6765\u7BA1\u7406md\u6587\u4EF6\uFF0C\u5E76\u4F7F\u5176\u81EA\u52A8\u751F\u6210\u4FA7\u8FB9\u680F\u83DC\u5355</p><h2 id="\u601D\u8DEF" tabindex="-1">\u601D\u8DEF <a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a></h2><p>\u901A\u8FC7\u904D\u5386\u6587\u4EF6\uFF0C\u6784\u9020\u6587\u4EF6\u6811\uFF0C\u5E76\u8BFB\u53D6\u6587\u4EF6\u4E2D\u7684\u7B2C\u4E00\u4E2A#\u6807\u9898\u4F5C\u4E3A\u83DC\u5355\u540D\uFF0C\u5229\u7528\u6587\u4EF6\u5939\u540D\u533A\u5206\u6587\u7AE0\u5185\u5BB9</p><p>\u9488\u5BF9\u4E0D\u540C\u7684\u6587\u4EF6\u76EE\u5F55\uFF0C\u4F7F\u7528\u4E0D\u540C\u7684\u914D\u7F6E\u4F20\u53C2</p><p>\u8BE6\u60C5\u53C2\u8003\uFF0C\u672C\u4ED3\u5E93\u7684<code>config.js</code> \u6587\u4EF6</p><div class="language-js"><pre><code><span class="token comment">// \u83B7\u53D6\u76EE\u6807\u76EE\u5F55</span>
<span class="token keyword">function</span> <span class="token function">addFileDir</span><span class="token punctuation">(</span><span class="token parameter">dir</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">../docs/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>dir<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span> <span class="token punctuation">}</span>

<span class="token comment">// \u6536\u96C6\u76EE\u5F55\u4E0B\u7684\u6587\u4EF6</span>
<span class="token keyword">function</span> <span class="token function">collectFileDir</span><span class="token punctuation">(</span><span class="token parameter">dir<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> fileTree <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">const</span> rootDir <span class="token operator">=</span> dir
  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span>dir<span class="token punctuation">]</span>
  <span class="token keyword">let</span> current <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>current <span class="token operator">=</span> arr<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BFB\u53D6\u5F53\u524D\u6587\u4EF6\uFF0C\u5E76\u505A\u4E00\u4E2A\u5224\u65AD\uFF0C\u6587\u4EF6\u76EE\u5F55\u5206\u522B\u5904\u7406</span>
    <span class="token keyword">let</span> stat <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">statSync</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span>
    <span class="token comment">//\u5982\u679C\u6587\u4EF6\u662F\u76EE\u5F55</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>stat<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u8BFB\u53D6\u5F53\u524D\u76EE\u5F55\uFF0C\u62FF\u5230\u6240\u6709\u6587\u4EF6\u548C\u76EE\u5F55</span>
      <span class="token keyword">let</span> files <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span>
      <span class="token comment">// \u5C06\u975E\u6839\u76EE\u5F55\u7684\u6587\u4EF6\u6DFB\u52A0\u5230\u6587\u4EF6\u6811</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">!==</span> dir<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        fileTree<span class="token punctuation">[</span>path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> files<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">file</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> data <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>current<span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">let</span> headling <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(\\#{1})([^\\#\\n]+.)$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">m</span></span>
            <span class="token keyword">let</span> title <span class="token operator">=</span> headling<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(\\#)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span> title<span class="token punctuation">,</span> fileName<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">extname</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      arr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>files<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">file</span> <span class="token operator">=&gt;</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>current<span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  callback <span class="token operator">&amp;&amp;</span> <span class="token function">callback</span><span class="token punctuation">(</span>fileTree<span class="token punctuation">)</span>
<span class="token punctuation">}</span>


<span class="token keyword">function</span> <span class="token function">sidebarFactory</span><span class="token punctuation">(</span><span class="token parameter">dirName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token function">collectFileDir</span><span class="token punctuation">(</span><span class="token function">addFileDir</span><span class="token punctuation">(</span>dirName<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">tree</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    res <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>tree<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
      text<span class="token operator">:</span> key<span class="token punctuation">,</span>
      children<span class="token operator">:</span> tree<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> title<span class="token punctuation">,</span> fileName <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span> text<span class="token operator">:</span> title<span class="token punctuation">,</span> link<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/docs/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>dirName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> res
<span class="token punctuation">}</span>
</code></pre></div>`,9),e=[o];function c(u,l,i,k,r,d){return a(),s("div",null,e)}var g=n(p,[["render",c]]);export{m as __pageData,g as default};
