import{_ as n,c as a,o as s,a as t}from"./app.98c1581b.js";const g='{"title":"A re-introduction to JavaScript\u8BFB\u540E\u611F(2)","description":"","frontmatter":{},"headers":[{"level":2,"title":"Variables","slug":"variables"},{"level":2,"title":"Operators","slug":"operators"},{"level":2,"title":"Control structures","slug":"control-structures"},{"level":2,"title":"Objects","slug":"objects"},{"level":2,"title":"Arrays","slug":"arrays"}],"relativePath":"docs/study/javascript/JSintroduce-2.md","lastUpdated":1655389335712}',p={},e=t(`<h1 id="a-re-introduction-to-javascript\u8BFB\u540E\u611F-2" tabindex="-1">A re-introduction to JavaScript\u8BFB\u540E\u611F(2) <a class="header-anchor" href="#a-re-introduction-to-javascript\u8BFB\u540E\u611F-2" aria-hidden="true">#</a></h1><p>\u8FD9\u6B21\u7B97\u662F\u8BA4\u771F\u7684\u770B\u5B8C\u4E86\u4E00\u4E2A\u5173\u4E8EJavaScript\u7684\u6587\u6863\uFF0C\u5728\u4E4B\u524D\u7684\u65F6\u5019\u90FD\u662F\u8001\u5E08\u968F\u610F\u7684\u6559\u4E00\u4E9B\u65B9\u6CD5\u548C\u6846\u67B6\u7684\u7528\u6CD5\uFF0C\u6CA1\u6709\u8BA4\u771F\u7684\u8BFB\u5B8C\u4E00\u7BC7\u5168\u82F1\u6587\u7684\u6587\u6863\uFF0C\u4ECA\u5929\u4E5F\u7B97\u662F\u8FBE\u5230\u4E86\u4E00\u4E2A\u5C0F\u76EE\u6807\uFF0C\u4ECE\u5934\u5230\u5C3E\u8BFB\u4E86\u4E00\u7BC7\u3002\u5728\u8FD9\u91CC\u6211\u60F3\u628A\u8FD9\u4EF6\u4E8B\u505A\u4E2A\u603B\u7ED3\uFF0C\u4E5F\u68C0\u9A8C\u4E00\u4E0B\u6211\u5B66\u5230\u4E86\u4EC0\u4E48\u3002</p><h2 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-hidden="true">#</a></h2><p>\u8BF4\u767D\u4E86\u5C31\u4E09\u79CD\u53D8\u91CF\u5173\u952E\u5B57<code>let</code>,<code>const</code>,and<code>var</code>\u3002\u5728\u8FD9\u4E09\u79CD\u53D8\u91CF\u4E2D<code>let</code>\u548C<code>const</code>\u662F\u89C4\u5B9A\u4E86\u4EE3\u7801\u5757\u4E2D\u7684\u4F5C\u7528\u533A\u57DF\u7684\uFF0C\u800Cvar\u662F\u51FD\u6570\u5916\u4E5F\u53EF\u89C1\u7684\u3002\u5982\u679C\u58F0\u660E\u4E86\u4E00\u4E2A\u53D8\u91CF\u5374\u6CA1\u6709\u7ED9\u4ED6\u8D4B\u503C\uFF0C\u4ED6\u7684\u7C7B\u578B\u4E00\u822C\u662F<code>undefined</code>\u3002</p><div class="language-javascript"><pre><code><span class="token keyword">let</span> a<span class="token punctuation">;</span>
<span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token string">&#39;Simon&#39;</span><span class="token punctuation">;</span>
</code></pre></div><div class="language-javascript"><pre><code><span class="token comment">// myLetVariable is *not* visible out here</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> myLetVariable <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> myLetVariable <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> myLetVariable<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// myLetVariable is only visible in here</span>
<span class="token punctuation">}</span>

<span class="token comment">// myLetVariable is *not* visible out here</span>
</code></pre></div><div class="language-javascript"><pre><code><span class="token keyword">const</span> Pi <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span> <span class="token comment">// variable Pi is set </span>
Pi <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// will throw an error because you cannot change a constant variable.</span>
</code></pre></div><div class="language-javascript"><pre><code><span class="token keyword">var</span> a<span class="token punctuation">;</span> 
<span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">&#39;Simon&#39;</span><span class="token punctuation">;</span>
</code></pre></div><div class="language-javascript"><pre><code><span class="token comment">// myVarVariable *is* visible out here </span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> myVarVariable <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> myVarVariable <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> myVarVariable<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
  <span class="token comment">// myVarVariable is visible to the whole function </span>
<span class="token punctuation">}</span> 

<span class="token comment">// myVarVariable *is* visible out here</span>
</code></pre></div><p>\u4ECEECMAScript2015\u6765<code>let</code>\u548C<code>const</code>\u5141\u8BB8\u4F60\u58F0\u660E\u4E00\u4E2A\u4EE3\u7801\u5757\u8303\u56F4\u7684\u53D8\u91CF\u3002</p><h2 id="operators" tabindex="-1">Operators <a class="header-anchor" href="#operators" aria-hidden="true">#</a></h2><p>JavaScript\u7684\u64CD\u4F5C\u6211\u89C9\u5F97\u548CJava\u91CC\u7684\u5DEE\u4E0D\u591A\u5C31\u5B57\u7B26\u4E32\u4E0A\u6709\u4E9B\u533A\u522B\uFF0C+\uFF0C-\uFF0C*\uFF0C/\uFF0C%\uFF0C\u8FD9\u4E9B\u90FD\u662F\u57FA\u672C\u7684\uFF0C\u8FD8\u6709+=\uFF0C-=\u8FDE\u52A0\u8D4B\u503C\u548C\u8FDE\u51CF\u8D4B\u503C\u3002</p><div class="language-javascript"><pre><code>x <span class="token operator">+=</span> <span class="token number">5</span><span class="token punctuation">;</span>
x <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">;</span>
</code></pre></div><p>\u8FD8\u6709\u4E00\u4E2A\u5E38\u7528\u7684++,--\u548C\u5176\u4ED6\u8BED\u8A00\u5927\u540C\u5C0F\u5F02\u3002</p><p>\u603B\u7684\u6765\u8BF4\u8FD8\u662F\u5F88\u597D\u4E0A\u624B\u7684\u3002</p><p>\u6211\u6CA1\u6709\u4F53\u9A8C\u8FC7\u7684\u5219\u662F<code>+</code>\u8FD0\u7B97\u7B26\uFF0C\u53EF\u4EE5\u76F4\u63A5\u8FDE\u63A5\u5B57\u7B26\u4E32\uFF0C</p><div class="language-javascript"><pre><code><span class="token string">&#39;hello&#39;</span> <span class="token operator">+</span> <span class="token string">&#39; world&#39;</span><span class="token punctuation">;</span> <span class="token comment">// &quot;hello world&quot;</span>
</code></pre></div><p>\u540C\u65F6\u5982\u679C\u5C06\u6570\u5B57\u548C\u5B57\u7B26\u4E32\u4F7F\u7528+\u53F7\u7684\u8BDD\uFF0C\u4ED6\u4F1A\u5148\u6309\uFF0C\u7B97\u5B50\u7684\u7C7B\u578B\u8FDB\u884C\u53D8\u6362\uFF0C\u4EE5\u7B2C\u4E00\u4E2A\u7B97\u5B50\u7684\u7C7B\u578B\u51C6</p><div class="language-javascript"><pre><code><span class="token string">&#39;3&#39;</span> <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;345&quot;</span>
 <span class="token number">3</span> <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">+</span> <span class="token string">&#39;5&#39;</span><span class="token punctuation">;</span> <span class="token comment">// &quot;75&quot;</span>
</code></pre></div><p>\u6BD4\u8F83\u8FD0\u7B97\u4E5F\u662F\u548C\u5E38\u89C1\u7684\u5DEE\u4E0D\u591A<code>\uFF0C&gt; ,&lt;,&lt;=</code>\u90FD\u6709\uFF0C\u5176\u4E2D\u6709\u4E00\u4E9B\u633A\u6709\u8DA3\u7684\u7ED3\u8BBA\u3002</p><div class="language-javascript"><pre><code><span class="token number">123</span> <span class="token operator">==</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token number">1</span> <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre></div><p><code>==</code>\u8FD9\u91CC\u9ED8\u8BA4\u662F\u6CA1\u6709\u8003\u8651\u7C7B\u578B\u7684\u5F71\u54CD\uFF0C\u9700\u8981\u8FDB\u884C\u7C7B\u578B\u7684\u5F3A\u6BD4\u8F83\u7684\u8BDD\u53EF\u4EE5\u4F7F\u7528<code>===</code></p><div class="language-javascript"><pre><code><span class="token number">123</span> <span class="token operator">===</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
<span class="token number">1</span> <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token comment">// false</span>
</code></pre></div><p>\u540C\u7406<code>&lt;=,&lt;==</code>\u4E5F\u5DEE\u4E0D\u4E868</p><h2 id="control-structures" tabindex="-1">Control structures <a class="header-anchor" href="#control-structures" aria-hidden="true">#</a></h2><p>JavaScript\u7684\u7ED3\u6784\u5316\u63A7\u5236\u548CC\u5BB6\u65CF\u7684\u7ED3\u6784\u5316\u8BED\u8A00\u5F88\u50CF\uFF0C\u540C\u6837\u91C7\u7528<code>if</code>,<code>else</code></p><div class="language-javascript"><pre><code><span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">&#39;kittens&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">==</span> <span class="token string">&#39;puppies&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  name <span class="token operator">+=</span> <span class="token string">&#39; woof&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">==</span> <span class="token string">&#39;kittens&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  name <span class="token operator">+=</span> <span class="token string">&#39; meow&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  name <span class="token operator">+=</span> <span class="token string">&#39;!&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
name <span class="token operator">==</span> <span class="token string">&#39;kittens meow&#39;</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5728\u5FAA\u73AF\u65B9\u9762\u4E5F\u6709<code>while</code>\u548C<code>do-whilel</code>\u4E24\u79CD\u5173\u952E\u5B57\uFF0C\u7B2C\u4E00\u79CD\u662F\u5F88\u597D\u7684\u57FA\u7840\u5FAA\u73AF\uFF0C\u7B2C\u4E8C\u79CD\u9664\u975E\u4F60\u5E0C\u671B\u5728\u6700\u540E\u5FAA\u73AF\u8FD8\u4F1A\u518D\u8FD0\u884C\u4E00\u6B21\u3002\u51FA\u53E3\u7684\u4F4D\u7F6E\u4E0D\u540C\u7684\u95EE\u9898\u7F62\u4E86\u3002</p><p>JavaScript\u7684<code>for</code>\u548CC\u548Cjava\u7684\u633A\u50CF\u7684\uFF0C\u4E00\u884C\u4EE3\u7801\u5373\u53EF\u5199\u51FA\u4E00\u4E2A\u5FAA\u73AF\u7ED3\u6784\u4F53\u7684\u63A7\u5236\u5757\u3002</p><div class="language-javascript"><pre><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Will execute 5 times</span>
<span class="token punctuation">}</span>
</code></pre></div><p>for-in</p><div class="language-javascript"><pre><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> property <span class="token keyword">in</span> object<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// do something with object property</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u540C\u6837\u5229\u7528\u903B\u8F91\u9009\u62E9\u7B26<code>||</code>,<code>&amp;&amp;</code>\u53EF\u4EE5\u65B9\u4FBF\u7684\u8FDB\u884C\u7B80\u5355\u7684\u903B\u8F91\u5904\u7406\uFF0C\u53EF\u4EE5\u6709\u6548\u5730\u5728\u8FDB\u884C\u5904\u7406\u4E4B\u524D\u786E\u8BA4\u7A7A\u5BF9\u8C61\uFF0C</p><div class="language-javascript"><pre><code><span class="token keyword">var</span> name <span class="token operator">=</span> o <span class="token operator">&amp;&amp;</span> o<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><div class="language-js"><pre><code><span class="token keyword">var</span> name <span class="token operator">=</span> cachedName <span class="token operator">||</span> <span class="token punctuation">(</span>cachedName <span class="token operator">=</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><div class="language-js"><pre><code><span class="token keyword">var</span> allowed <span class="token operator">=</span> <span class="token punctuation">(</span>age <span class="token operator">&gt;</span> <span class="token number">18</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&#39;yes&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;no&#39;</span><span class="token punctuation">;</span>
</code></pre></div><p>\u8FD9\u662F\u4E00\u4E2A\u8BED\u6CD5\u7CD6\u548CC\uFF0CJava\u5DEE\u4E0D\u591A\u7684\u3002</p><p>\u540C\u6837<code>switch</code>\u53EF\u4EE5\u901A\u8FC7\u9009\u62E9\u6570\u5B57\u548C\u5B57\u7B26\u4E32\u6765\u8FDB\u884C\u4E0D\u540C\u7684\u5206\u652F\u3002</p><div class="language-js"><pre><code><span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">case</span> <span class="token string">&#39;draw&#39;</span><span class="token operator">:</span>
    <span class="token function">drawIt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token keyword">case</span> <span class="token string">&#39;eat&#39;</span><span class="token operator">:</span>
    <span class="token function">eatIt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token keyword">default</span><span class="token operator">:</span>
    <span class="token function">doNothing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5982\u679C\u6CA1\u6709\u52A0<code>break</code>\u5728\u5176\u540E\u7684\u8BDD\uFF0C\u5728\u9009\u62E9\u90A3\u4E00\u53E5\u540E\uFF0C\u4E0B\u9762\u7684\u4EE3\u7801\u4F1A\u7EE7\u7EED\u8FDB\u884C\u6267\u884C\u3002</p><p>\u4E00\u822C\u4F1A\u4F7F\u7528<code>default</code>\u8BED\u53E5\u6765\u4FDD\u8BC1\u5176\u9009\u62E9\u7684\u90E8\u5206\u53EF\u9884\u89C1\u6027\u7684\u8FDB\u884C\u5904\u7406\u3002</p><p>\u5728\u5176\u5185\u90E8\u6BD4\u8F83\u7684\u5730\u65B9\u9ED8\u8BA4\u4F7F\u7528\u7684\u662F===</p><div class="language-js"><pre><code><span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">case</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token operator">:</span>
    <span class="token function">yay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token keyword">default</span><span class="token operator">:</span>
    <span class="token function">neverhappens</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="objects" tabindex="-1">Objects <a class="header-anchor" href="#objects" aria-hidden="true">#</a></h2><p>JavaScript\u662F\u4E00\u95E8\u9762\u5411\u5BF9\u8C61\u7684\u8BED\u8A00\uFF0C\u5BF9\u8C61\u53EF\u4EE5\u901A\u8FC7\u547D\u540D\u7684\u503C\u8FDB\u884C\u5339\u914D\uFF0C\u5C31\u50CF...</p><ul><li>Dictionaries in Python.</li><li>Hashes in Perl and Ruby.</li><li>Hash tables in C and C++.</li><li>HashMaps in Java.</li><li>Associative arrays in PHP.</li></ul><p>\u5728\u4E8B\u5B9E\u4E0A\uFF0C\u8FD9\u79CD\u6570\u636E\u7ED3\u6784\u5E7F\u6CDB\u7684\u5E94\u7528\u8BC1\u660E\u8FD9\u79CD\u65B9\u5F0F\u662F\u591A\u529F\u80FD\u7684\uFF0C\u4EFB\u4F55\u4E1C\u897F\u5728JavaScript\u4E2D\u90FD\u7B97\u505A\u5BF9\u8C61\u3002</p><p>\u5141\u8BB8\u4F60\u521B\u9020\u4EFB\u610F\u590D\u6742\u6027\u7684\u6570\u636E\u7ED3\u6784\u3002</p><div class="language-js"><pre><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><div class="language-js"><pre><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u8FD9\u4E24\u79CD\u58F0\u660E\u65B9\u5F0F\u5728\u8BED\u4E49\u4E0A\u662F\u7B49\u4EF7\u7684\u3002\u7B2C\u4E8C\u79CD\u66F4\u7B80\u6D01\u548C\u4FBF\u6377\u3002\u8FD9\u79CD\u89C4\u5219\u8BED\u6CD5\u5728JSON\u4E2D\u4E5F\u662F\u6838\u5FC3\u7684\u90E8\u4F4D\u3002</p><p>\u5C06\u4E00\u4E2A\u5BF9\u8C61\u8FDB\u884C\u5B9E\u4F8B\u5316\u3002</p><div class="language-js"><pre><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;Carrot&#39;</span><span class="token punctuation">,</span>
  <span class="token keyword">for</span><span class="token operator">:</span> <span class="token string">&#39;Max&#39;</span><span class="token punctuation">,</span> <span class="token comment">// &#39;for&#39; is a reserved word, use &#39;_for&#39; instead.</span>
  details<span class="token operator">:</span> <span class="token punctuation">{</span>
    color<span class="token operator">:</span> <span class="token string">&#39;orange&#39;</span><span class="token punctuation">,</span>
    size<span class="token operator">:</span> <span class="token number">12</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5C5E\u6027\u7684\u5165\u53E3\u53EF\u4EE5\u88AB\u8054\u7CFB\u8D77\u6765\u3002</p><div class="language-js"><pre><code>obj<span class="token punctuation">.</span>details<span class="token punctuation">.</span>color<span class="token punctuation">;</span> <span class="token comment">// orange</span>
obj<span class="token punctuation">[</span><span class="token string">&#39;details&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;size&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 12</span>
</code></pre></div><p>\u63A5\u4E0B\u521B\u5EFA\u7684\u662F\u4E00\u4E2A\u5BF9\u8C61\u539F\u578B\uFF0C\u548C\u4E00\u4E2A\u5B9E\u4F8B\u5316\u7684you</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Define an object</span>
<span class="token keyword">var</span> you <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&#39;You&#39;</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// We are creating a new person named &quot;You&quot; aged 24.</span>
</code></pre></div><p>\u5728\u5EFA\u7ACB\u8FC7\u4E00\u6B21\u540E\uFF0C\u5BF9\u8C61\u7684\u5C5E\u6027\u53EF\u4EE5\u88AB\u8BFB\u53D6\u91C7\u7528\u4E24\u79CD\u65B9\u5F0F\u3002</p><div class="language-js"><pre><code><span class="token comment">// dot notation</span>
obj<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;Simon&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> name <span class="token operator">=</span> obj<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
</code></pre></div><div class="language-js"><pre><code><span class="token comment">// bracket notation</span>
obj<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;Simon&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> name <span class="token operator">=</span> obj<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// can use a variable to define a key</span>
<span class="token keyword">var</span> user <span class="token operator">=</span> <span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">&#39;what is your key?&#39;</span><span class="token punctuation">)</span>
obj<span class="token punctuation">[</span>user<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">&#39;what is its value?&#39;</span><span class="token punctuation">)</span>
</code></pre></div><p>\u70B9\u8BB0\u53F7\u6CD5\u548C\u62EC\u5F27\u8BB0\u53F7\u6CD5\u3002</p><p>\u8FD9\u4E24\u79CD\u540C\u6837\u4E5F\u662F\u7B49\u4EF7\u7684\u3002\u4F46\u662F\u5728\u5BF9\u8C61\u7684\u5C5E\u6027\u547D\u540D\u4E2D\u5982\u679C\u6070\u597D\u548C\u9884\u7559\u5B57\u78B0\u649E\u4E86\u7684\u8BDD\u3002</p><div class="language-js"><pre><code>obj<span class="token punctuation">.</span>for <span class="token operator">=</span> <span class="token string">&#39;Simon&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Syntax error, because &#39;for&#39; is a reserved word</span>
obj<span class="token punctuation">[</span><span class="token string">&#39;for&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;Simon&#39;</span><span class="token punctuation">;</span> <span class="token comment">// works fine</span>
</code></pre></div><h2 id="arrays" tabindex="-1">Arrays <a class="header-anchor" href="#arrays" aria-hidden="true">#</a></h2><p>\u6570\u7EC4\u5728JavaScript\u4E2D\u4E5F\u7B97\u7684\u4E0A\u5E02\u4E00\u79CD\u7279\u6B8A\u7684\u5BF9\u8C61\u4E86\u3002</p><p>\u4E00\u822C\u4F1A\u4F7F\u7528<code>[]</code>\u6765\u8BFB\u53D6\u6570\u7EC4\uFF0C\u540C\u6837\u8FD8\u6709\u4E00\u4E2A\u65B9\u4FBF\u7684\u5C5E\u6027<code>length</code>\u3002</p><div class="language-js"><pre><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;dog&#39;</span><span class="token punctuation">;</span>
a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;cat&#39;</span><span class="token punctuation">;</span>
a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;hen&#39;</span><span class="token punctuation">;</span>
a<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token comment">// 3</span>
</code></pre></div><p>\u5FEB\u901F\u521B\u5EFA\u6570\u7EC4\u7684\u53E6\u4E00\u79CD\u65B9\u5F0F</p><div class="language-js"><pre><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;dog&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cat&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hen&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
a<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token comment">// 3</span>
</code></pre></div><p><code>array.length</code>\u8BA1\u7B97\u7684\u662F\u6570\u7EC4\u7684\u603B\u957F\u5EA6\u3002</p><div class="language-js"><pre><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;dog&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cat&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hen&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
a<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;fox&#39;</span><span class="token punctuation">;</span>
a<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token comment">// 101</span>
</code></pre></div><p>\u5982\u679C\u4F60\u6307\u5411\u4E00\u4E2A\u4E0D\u5B58\u5728\u7684\u6570\u7EC4\u4E0B\u6807\uFF0C\u4F60\u4F1A\u5F97\u5230<code>undefined</code>\u7684\u8FD4\u56DE\u503C</p><p>\u4E00\u822C\u4F7F\u7528\u6570\u7EC4\u548C\u5FAA\u73AF</p><div class="language-js"><pre><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> a<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Do something with a[i]</span>
<span class="token punctuation">}</span>
</code></pre></div><p>ES2015\u5F15\u5165\u66F4\u7B80\u6D01\u7684</p><p><code>for..of</code></p><div class="language-js"><pre><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> currentValue <span class="token keyword">of</span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Do something with currentValue</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u540C\u6837\u53EF\u4EE5\u4F7F\u7528\u91CD\u590D\u7684<code>for...in</code></p><p>\u5FAA\u73AF\uFF0C\u8FD9\u4E2A\u4E0D\u6839\u636E\u6570\u7EC4\u7684\u5143\u7D20\u6765\u6267\u884C\u5FAA\u73AF\uFF0C\u4F9D\u9760\u7684\u662F\u6570\u7EC4\u7684\u4E0B\u6807\uFF0C\u6B64\u5916\uFF0C\u5982\u679C\u589E\u52A0\u4E2A\u65B0\u5C5E\u6027\u5BF9\u4E8E<code>Array.prototype</code>\uFF0C\u5B83\u4E5F\u6709\u53EF\u80FD\u65B0\u52A0\u4E2A\u5FAA\u73AF\u5728\u8FD9\u4E4B\u4E0A\u3002\u6240\u4EE5\u4E00\u822C\u4E0D\u63A8\u8350\u4F7F\u7528<code>for..in</code></p><p>\u53E6\u4E00\u79CD\u65B9\u5F0F\u8FDB\u884C\u8FED\u4EE3\uFF0C\u5728ES5\u4E2D\u662F<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach" target="_blank" rel="noopener noreferrer">forEach()</a></p><div class="language-js"><pre><code><span class="token punctuation">[</span><span class="token string">&#39;dog&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cat&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hen&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">currentValue<span class="token punctuation">,</span> index<span class="token punctuation">,</span> array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Do something with currentValue or array[index]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5173\u4E8E\u6570\u7EC4\u7684\u65B9\u6CD5\uFF0C\u60F3\u8981\u5728\u5176\u4E2D\u6DFB\u52A0\u4E00\u4E2A\u5143\u7D20</p><div class="language-js"><pre><code>a<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><table><thead><tr><th>Method name</th><th>Description</th></tr></thead><tbody><tr><td><code>a.toString()</code></td><td>Returns a string with the <code>toString()</code> of each element separated by commas.</td></tr><tr><td><code>a.toLocaleString()</code></td><td>Returns a string with the <code>toLocaleString()</code>of each element separated by commas.</td></tr><tr><td><code>a.concat(item1[, item2[, ...[, itemN]]])</code></td><td>Returns a new array with the items added on to it.</td></tr><tr><td><code>a.join(sep)</code></td><td>Converts the array to a string \u2014 with values delimited by the <code>sep</code> param</td></tr><tr><td><code>a.pop()</code></td><td>Removes and returns the last item.</td></tr><tr><td><code>a.push(item1, ..., itemN)</code></td><td>Appends items to the end of the array.</td></tr><tr><td><code>a.reverse()</code></td><td>Reverses the array.</td></tr><tr><td><code>a.shift()</code></td><td>Removes and returns the first item.</td></tr><tr><td><code>a.slice(start[, end])</code></td><td>Returns a sub-array.</td></tr><tr><td><code>a.sort([cmpfn])</code></td><td>Takes an optional comparison function.</td></tr><tr><td><code>a.splice(start, delcount[, item1[, ...[, itemN]]])</code></td><td>Lets you modify an array by deleting a section and replacing it with more items.</td></tr><tr><td><code>a.unshift(item1[, item2[, ...[, itemN]]])</code></td><td>Prepends items to the start of the array.</td></tr></tbody></table>`,84),o=[e];function c(r,l,i,u,k,d){return s(),a("div",null,o)}var v=n(p,[["render",c]]);export{g as __pageData,v as default};
