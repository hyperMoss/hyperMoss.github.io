import{_ as n,c as s,o as a,a as p}from"./app.e13b0348.js";const y='{"title":"\u5C0F\u524D\u7AEF\u7684\u7B14\u8BD5\u98981","description":"","frontmatter":{"title":"\u5C0F\u524D\u7AEF\u7684\u7B14\u8BD5\u98981","date":"2019-03-20T13:10:50.000Z","tags":["Date Structure","JavaScript"]},"headers":[{"level":2,"title":"\u5BCC\u9014","slug":"\u5BCC\u9014"},{"level":3,"title":"\u6570\u636E\u5904\u7406 10000.2 => $10,000.20","slug":"\u6570\u636E\u5904\u7406-10000-2-10-000-20"},{"level":3,"title":"\u5927\u6574\u6570\u76F8\u52A0","slug":"\u5927\u6574\u6570\u76F8\u52A0"},{"level":2,"title":"\u4F5C\u4E1A\u5E2E","slug":"\u4F5C\u4E1A\u5E2E"},{"level":3,"title":"\u6570\u7EC4\u4F4D\u79FB0","slug":"\u6570\u7EC4\u4F4D\u79FB0"},{"level":2,"title":"\u5BC6\u7801\u5408\u683C\u68C0\u9A8C","slug":"\u5BC6\u7801\u5408\u683C\u68C0\u9A8C"},{"level":2,"title":"\u963F\u91CC","slug":"\u963F\u91CC"},{"level":3,"title":"\u6570\u7EC4\u6C42\u6700\u503C","slug":"\u6570\u7EC4\u6C42\u6700\u503C"},{"level":3,"title":"\u6570\u7EC4\u964D\u7EF4\u6253\u51FB","slug":"\u6570\u7EC4\u964D\u7EF4\u6253\u51FB"},{"level":2,"title":"\u4FEE\u8BA2","slug":"\u4FEE\u8BA2"},{"level":2,"title":"\u540E\u8BB0","slug":"\u540E\u8BB0"}],"relativePath":"blog/interview1.md","lastUpdated":1649172866637}',t={},o=p(`<p>\u672C\u6587\u6765\u8BF4\u4F5C\u8005\u6709\u4E24\u4F4D\uFF0C\u9664\u4E86\u6211\u8FD8\u6709\u4E00\u4F4D\u53EB\uFF08\u5929\u5929\u5341\u70B9\u7761\uFF09\u7684\u8001\u59D0\uFF0C\u91CC\u9762\u7684\u5185\u5BB9\u7531\u6211\u4E24\u5171\u540C\u5B8C\u6210\u3002</p><p>\u4E3B\u8981\u8BB0\u5F55\u4E86\u4E00\u4E9B\u57FA\u672C\u7684\u7B14\u8BD5\u9898\u3002</p><h2 id="\u5BCC\u9014" tabindex="-1">\u5BCC\u9014 <a class="header-anchor" href="#\u5BCC\u9014" aria-hidden="true">#</a></h2><p>\u5BCC\u9014\u90FD\u662F\u8001\u59D0\u53BB\u7B14\u8BD5\u8FC7\u7684\uFF0C\u6211\u5C31\u7528\u8001\u59D0\u7684\u4E1C\u897F\u4E86.</p><h3 id="\u6570\u636E\u5904\u7406-10000-2-10-000-20" tabindex="-1">\u6570\u636E\u5904\u7406 10000.2 =&gt; $10,000.20 <a class="header-anchor" href="#\u6570\u636E\u5904\u7406-10000-2-10-000-20" aria-hidden="true">#</a></h3><p>\u4E2D\u95F4\u7528\u4E86\u6B63\u5219\u53D6\u5230\u6700\u540E\u4E24\u4F4D\u5C0F\u6570\uFF0C\u6700\u540E\u6574\u6570\u90E8\u5206\u4F7F\u7528<code>toLocaleString</code>\u65B9\u6CD5\u5C06\u6574\u6570\u90E8\u5206\u89C4\u8303\u5316</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">processData</span> <span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>num <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// \u4FDD\u7559\u4E24\u4F4D</span>
  <span class="token keyword">let</span> decimalPart <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\d+)\\.(\\d+)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;.$2&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> integerPart <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u6574\u6570\u90E8\u5206\u52A0\u9017\u53F7</span>
  <span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;$&#39;</span> <span class="token operator">+</span> integerPart <span class="token operator">+</span> decimalPart
  <span class="token keyword">return</span> str
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u5927\u6574\u6570\u76F8\u52A0" tabindex="-1">\u5927\u6574\u6570\u76F8\u52A0 <a class="header-anchor" href="#\u5927\u6574\u6570\u76F8\u52A0" aria-hidden="true">#</a></h3><p>\u8D85\u8FC7\u8868\u793A\u8303\u56F4\u7684\u6570\u76F8\u52A0\uFF0C\u6CA1\u4EC0\u4E48\u597D\u8BF4\u7684\uFF0C\u76F4\u63A5\u8F6C\u5B57\u7B26\u4E32\uFF0C\u518D\u9010\u4F4D\u8BA1\u7B97\u3002</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">sumStrings</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> res <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>

  <span class="token keyword">var</span> c <span class="token operator">=</span> <span class="token number">0</span>
  a <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  b <span class="token operator">=</span> b<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>length <span class="token operator">||</span> b<span class="token punctuation">.</span>length <span class="token operator">||</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    c <span class="token operator">+=</span> <span class="token operator">~</span><span class="token operator">~</span>a<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token operator">~</span><span class="token operator">~</span>b<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    res <span class="token operator">=</span> <span class="token punctuation">(</span>c <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">+</span> res
    c <span class="token operator">=</span> c <span class="token operator">&gt;</span> <span class="token number">9</span> <span class="token comment">// \u9A9A\u64CD\u4F5C\uFF0C\u7C7B\u4F3C\u8BED\u6CD5\u7CD6\uFF0C\u5C06c\u8D4B\u503C\u4E3A\u5E03\u5C14\u5427\u53D8\u91CF\u4E86</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^0+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u5220\u9664res\u524D\u9762\u76840</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u4F5C\u4E1A\u5E2E" tabindex="-1">\u4F5C\u4E1A\u5E2E <a class="header-anchor" href="#\u4F5C\u4E1A\u5E2E" aria-hidden="true">#</a></h2><h3 id="\u6570\u7EC4\u4F4D\u79FB0" tabindex="-1">\u6570\u7EC4\u4F4D\u79FB0 <a class="header-anchor" href="#\u6570\u7EC4\u4F4D\u79FB0" aria-hidden="true">#</a></h3><p>\u628A\u4E00\u4E2A\u6570\u7EC4\u4E2D\u7684\u6240\u6709\u76840\u79FB\u52A8\u5230\u6570\u7EC4\u5C3E</p><p>\u8FD9\u91CC\u6211\u91C7\u7528\u4E86\u7C7B\u4F3C\u5192\u6CE1\u7684\u65B9\u6CD5\uFF0C\u9047\u5230\u975E0\u5C06\u5176\u524D\u79FB\u5373\u53EF\uFF0C\u8001\u59D0\u91C7\u7528\u4E86\u6570\u7EC4\u7684<code>indexO</code>f\u5C5E\u6027\u548C<code>splice</code>\uFF0C<code>push</code>\u548C<code>concat</code>\u65B9\u6CD5</p><div class="language-js"><pre><code><span class="token comment">//\u8001\u59D0\u65B9\u6CD5</span>
<span class="token keyword">function</span> <span class="token function">processAry</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>
    <span class="token keyword">var</span> index <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> zeros <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>index<span class="token operator">!==</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>
    index <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    zeros<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>zeros<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token comment">//\u6211\u65B9\u6CD5</span>
<span class="token keyword">function</span> <span class="token function">processAry2</span><span class="token punctuation">(</span><span class="token parameter">ary</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>ary<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>ary<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">swap</span><span class="token punctuation">(</span>ary<span class="token punctuation">,</span>i<span class="token punctuation">,</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> ary
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token parameter">ary<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    t<span class="token operator">=</span> ary<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    ary<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> ary<span class="token punctuation">[</span>j<span class="token punctuation">]</span>
    ary<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span>t<span class="token punctuation">;</span>
    <span class="token keyword">return</span> ary<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u5BC6\u7801\u5408\u683C\u68C0\u9A8C" tabindex="-1">\u5BC6\u7801\u5408\u683C\u68C0\u9A8C <a class="header-anchor" href="#\u5BC6\u7801\u5408\u683C\u68C0\u9A8C" aria-hidden="true">#</a></h2><p>\u8F93\u5165\u4E00\u4E32\u5B57\u7B26\u4E32\u9700\u8981\u6EE1\u8DB3\u4EE5\u4E0B\u6761\u4EF6</p><ol><li>\u957F\u5EA6\u4E0D\u5F97\u5C0F\u4E8E8\u4F4D</li><li>\u5927\u5199\u5B57\u6BCD\uFF0C\u5C0F\u5199\u5B57\u6BCD\uFF0C\u6570\u5B57\uFF0C\u7B26\u53F7\uFF0C\u4E0D\u5F97\u5C11\u4E8E3\u79CD\u642D\u914D</li><li>\u4E0D\u5F97\u51FA\u73B0\u91CD\u590D\u5B57\u7B26\u5B50\u4E32</li></ol><div class="language-js"><pre><code><span class="token comment">//\u8001\u59D0\u7684</span>
<span class="token keyword">function</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> len <span class="token operator">=</span> str<span class="token punctuation">.</span>length
    <span class="token keyword">if</span><span class="token punctuation">(</span>len <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token keyword">const</span> arr <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> newarr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">!==</span> newarr<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span> <span class="token comment">// \u5224\u65AD\u662F\u5426\u6709\u91CD\u590D</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span>item <span class="token keyword">of</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>item <span class="token operator">&gt;=</span> <span class="token string">&#39;A&#39;</span> <span class="token operator">&amp;&amp;</span> item <span class="token operator">&lt;=</span> <span class="token string">&#39;Z&#39;</span><span class="token punctuation">)</span> type<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>item <span class="token operator">&gt;=</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">&amp;&amp;</span> item <span class="token operator">&lt;=</span> <span class="token string">&#39;z&#39;</span><span class="token punctuation">)</span> type<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>item <span class="token operator">&gt;=</span> <span class="token string">&#39;0&#39;</span> <span class="token operator">&amp;&amp;</span> item <span class="token operator">&lt;=</span> <span class="token string">&#39;9&#39;</span><span class="token punctuation">)</span> type<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">else</span> type<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>type<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> type<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> type<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> type<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">&gt;=</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token comment">// return !!(type.filter(item =&gt; item &gt; 0).length)</span>
    <span class="token punctuation">}</span>


<span class="token comment">//\u6211\u52A0\u4E86\u70B9\u9A9A\u64CD\u4F5C \u7528\u4E86\u4E0B\u6B63\u5219\uFF0C\u8FD8\u6709\u7279\u6B8A\u7684\u6570\u7EC4\u6C42\u548C\u64CD\u4F5C</span>
<span class="token keyword">function</span> <span class="token function">passwordtest</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> l<span class="token operator">=</span>str<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>l<span class="token operator">&lt;</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token keyword">const</span> arr <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> newarr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">!==</span>newarr<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
        <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[a-z]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> type<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[0-9]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> type<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[A-Z]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> type<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span>
        <span class="token keyword">else</span> type<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">eval</span><span class="token punctuation">(</span>type<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;+&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&gt;=</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u963F\u91CC" tabindex="-1">\u963F\u91CC <a class="header-anchor" href="#\u963F\u91CC" aria-hidden="true">#</a></h2><p>\u90FD\u662F\u4E9B\u5F88\u57FA\u7840\u7684\u4E1C\u897F\uFF0C\u4F46\u662F\u6211\u8FD8\u662F\u840C\u65B0\u6240\u4EE5.......</p><h3 id="\u6570\u7EC4\u6C42\u6700\u503C" tabindex="-1">\u6570\u7EC4\u6C42\u6700\u503C <a class="header-anchor" href="#\u6570\u7EC4\u6C42\u6700\u503C" aria-hidden="true">#</a></h3><p>\u6570\u7EC4\u6C42\u6700\u503C\u6709\u56DB\u79CD\u5199\u6CD5\uFF0C\u4F60\u53EF\u77E5\u9053\u5417\uFF1F\uFF08\u5927\u96FE\uFF09</p><div class="language-js"><pre><code><span class="token keyword">var</span> arr <span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">//\u7528\u5E93\u51FD\u6570</span>
<span class="token keyword">var</span> max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> min <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u6392\u5E8F</span>
arr<span class="token punctuation">.</span><span class="token function">stor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> max <span class="token operator">=</span> arr<span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> min <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">//\u5B57\u7B26\u4E32,\u4E0D\u4F7F\u7528apply</span>
<span class="token keyword">var</span> max <span class="token operator">=</span> <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&quot;Math.max(&quot;</span> <span class="token operator">+</span> arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">//\u4F7F\u7528\u904D\u5386</span>
arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">return</span> a<span class="token operator">&gt;</span>b<span class="token operator">?</span>a<span class="token operator">:</span>b
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="\u6570\u7EC4\u964D\u7EF4\u6253\u51FB" tabindex="-1">\u6570\u7EC4\u964D\u7EF4\u6253\u51FB <a class="header-anchor" href="#\u6570\u7EC4\u964D\u7EF4\u6253\u51FB" aria-hidden="true">#</a></h3><p>\u5C06\u4E00\u4E2A\u9AD8\u7EF4\u6570\u7EC4\u8FD8\u539F\u6210\u4E00\u7EF4\u6570\u7EC4\u5E76\u8F93\u51FA</p><p>\u6240\u6709\u5143\u7D20\u90FD\u662F\u5BF9\u8C61</p><p>\u8001\u59D0\u4E4B\u524D\u770B\u8FC7\uFF0C\u6211\u6CA1\u89C1\u8FC7\uFF0C\u4E2D\u95F4\u60F3\u5230\u9012\u5F52\u4E86\uFF0C\u53EF\u60DC\u4E0D\u592A\u719F\u6089JavaScript\u3002\u8001\u59D0\u63D0\u4F9B\u7684\u7B54\u6848\u5982\u4E0B\u3002</p><div class="language-js"><pre><code> <span class="token comment">//\u8001\u59D0\u7ED9\u7684\u683C\u5F0F\u5316\u65B9\u6CD5</span>
<span class="token keyword">function</span> <span class="token function">flat2</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=&gt;</span> <span class="token operator">+</span>item <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>


<span class="token comment">//\u9012\u5F52\u65B9\u6CD5</span>
<span class="token keyword">function</span> <span class="token function">flat</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>item <span class="token keyword">of</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token function">flat</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u5C3E\u9012\u5F52\u65B9\u6CD5</span>
<span class="token keyword">function</span> <span class="token function">flat</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> flag <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>item <span class="token keyword">of</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                flag<span class="token operator">=</span><span class="token number">1</span>
                res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>item<span class="token punctuation">)</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> flag<span class="token operator">?</span> <span class="token function">flat</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token operator">:</span>res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
       
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre></div><h2 id="\u4FEE\u8BA2" tabindex="-1">\u4FEE\u8BA2 <a class="header-anchor" href="#\u4FEE\u8BA2" aria-hidden="true">#</a></h2><ol><li>\u4E0A\u9762\u7684\u6570\u7EC4\u964D\u7EF4\u6709\u70B9\u50CF\u6DF1\u62F7\u8D1D\u7684\u9012\u5F52</li></ol><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">deepClone</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> objClone <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>obj <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> obj <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span>key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5224\u65AD obj \u5B50\u5143\u7D20\u662F\u5426\u4E3A\u5BF9\u8C61\uFF0C\u5982\u679C\u662F\uFF0C\u9012\u5F52\u590D\u5236</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          objClone<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u5982\u679C\u4E0D\u662F\uFF0C\u7B80\u5355\u590D\u5236</span>
          objClone<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> objClone<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Console</span>
<span class="token comment">// a = [2, 2, 3, 4];</span>
<span class="token comment">// b = [1, 2, 3, 4];</span>
</code></pre></div><p><a href="https://juejin.im/post/5c8e4cd3f265da67c87454a0?utm_source=gold_browser_extension#chapter-two" target="_blank" rel="noopener noreferrer">jsliang \u7684 2019 \u9762\u8BD5\u51C6\u5907</a></p><h2 id="\u540E\u8BB0" tabindex="-1">\u540E\u8BB0 <a class="header-anchor" href="#\u540E\u8BB0" aria-hidden="true">#</a></h2><p>\u5982\u679C\u4EE5\u540E\u8FD8\u6709\u7B14\u8BD5\uFF0C\u4F1A\u7EE7\u7EED\u603B\u7ED3\u7684\uFF0C\u4E5F\u4E0D\u77E5\u9053\u6709\u6CA1\u6709\u4EC0\u4E48\u597D\u70B9\u7684\u65B9\u6CD5\uFF0C\u6574\u7406\u8D77\u6765\u8FD9\u4E9B\u4E1C\u897F\u3002</p><p>\u611F\u89C9\u7528\u4E00\u4E2A\u601D\u7EF4\u5BFC\u56FE\u7684\u6811\u72B6\u7ED3\u6784\u6709\u53EF\u80FD\u4F1A\u6BD4\u8F83\u597D\uFF0C\u7528\u4E86\u4EC0\u4E48\u65B9\u6CD5\uFF0C\u90FD\u548C\u5B9E\u9645\u9898\u76EE\u8054\u7CFB\u8D77\u6765\u3002</p><p>JavaScript\u7EC4\u4EF6\u5F88\u591A\uFF0C\u5E93\u5F88\u591A\uFF0C\u6709\u4E9B\u86C7\u76AE\u65B9\u6CD5\u8FD8\u5F97\u81EA\u5DF1\u6478\u3002</p>`,37),e=[o];function c(u,l,k,r,i,d){return a(),s("div",null,e)}var f=n(t,[["render",c]]);export{y as __pageData,f as default};
