import{o as n,c as s,d as a}from"./app.26bcd9b6.js";const p='{"title":"eggjs和umi的配置","description":"","frontmatter":{"title":"eggjs和umi的配置","date":"2021-12-20 23:31:23"},"headers":[{"level":2,"title":"初始化","slug":"初始化"},{"level":2,"title":"编写配置","slug":"编写配置"},{"level":2,"title":"修改路由","slug":"修改路由"},{"level":2,"title":"启动","slug":"启动"},{"level":2,"title":"部署","slug":"部署"},{"level":2,"title":"参考","slug":"参考"}],"relativePath":"blog/egg-assets-umi.md","lastUpdated":1640014851029}',t={},o=a('<p>eggjs 配置umi 作为前端静态服务</p><h2 id="初始化"><a class="header-anchor" href="#初始化" aria-hidden="true">#</a> 初始化</h2><p>初始化eggjs</p><div class="language-bash"><pre><code><span class="token function">mkdir</span> egg-example <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> egg-example\n<span class="token function">npm</span> init egg --type<span class="token operator">=</span>simple\n</code></pre></div><p>初始化umi</p><div class="language-bash"><pre><code>$ <span class="token builtin class-name">cd</span> app <span class="token operator">&amp;&amp;</span> <span class="token function">mkdir</span> web <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> web\n$ <span class="token function">yarn</span> create @umijs/umi-app\n<span class="token comment"># 或 npx @umijs/create-umi-app</span>\n</code></pre></div><p>如果在内部安装umi的依赖,node_modules的大量文件,在外部启动eggjs的时候会影响到文件的检测,所以把package.json中的依赖手动复制到外层的package.json中,(同理eslint,.editorconfig,.prettierrc等配置文件也可以挪到跟目录).</p><p>安装依赖</p><p>回到最外层目录,安装egg的静态资源插件和模版解析插件</p><div class="language-bash"><pre><code><span class="token function">npm</span> i egg-view-assets\n<span class="token function">npm</span> i egg-view-nunjucks\n<span class="token function">yarn</span> <span class="token comment"># 或 npm i</span>\n</code></pre></div><h2 id="编写配置"><a class="header-anchor" href="#编写配置" aria-hidden="true">#</a> 编写配置</h2><p>在<code>app/config</code>文件夹下,修改<code>config.default.js</code></p><div class="language-js"><pre><code><span class="token comment">/* eslint valid-jsdoc: &quot;off&quot; */</span>\n\n<span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span>\n\n<span class="token comment">/**\n * @param {Egg.EggAppInfo} appInfo app info\n */</span>\nmodule<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token parameter">appInfo</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">/**\n   * built-in config\n   * @type {Egg.EggAppConfig}\n   **/</span>\n  <span class="token keyword">const</span> config <span class="token operator">=</span> exports <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// use for cookie sign key, should change to your own and keep security</span>\n  config<span class="token punctuation">.</span>keys <span class="token operator">=</span> appInfo<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&#39;_1639642621216_1986&#39;</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// add your middleware config here</span>\n  config<span class="token punctuation">.</span>middleware <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n <span class="token comment">// 其中还有个隐式的egg-static 代表服务器的静态资源地址,默认位置为app/public</span>\n\n  <span class="token comment">// 官方模版引擎定制的位置,代表在此作为root并采用assets的模版解析,view默认位置为app/view</span>\n  config<span class="token punctuation">.</span>view <span class="token operator">=</span> <span class="token punctuation">{</span>\n    mapping<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string">&#39;.html&#39;</span><span class="token operator">:</span> <span class="token string">&#39;assets&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token comment">//  模版配置</span>\n  config<span class="token punctuation">.</span>assets <span class="token operator">=</span> <span class="token punctuation">{</span>\n    publicPath<span class="token operator">:</span> <span class="token string">&#39;/public/&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 获取的静态文件目录</span>\n    templatePath<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>appInfo<span class="token punctuation">.</span>baseDir<span class="token punctuation">,</span> <span class="token string">&#39;app/view/index.html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// html模版位置,服务器解析的</span>\n    templateViewEngine<span class="token operator">:</span> <span class="token string">&#39;nunjucks&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token comment">//  官方默认配置</span>\n  config<span class="token punctuation">.</span>assets <span class="token operator">=</span> <span class="token punctuation">{</span>\n    publicPath<span class="token operator">:</span> <span class="token string">&#39;/public/&#39;</span><span class="token punctuation">,</span>\n    devServer<span class="token operator">:</span> <span class="token punctuation">{</span>\n      debug<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      command<span class="token operator">:</span> <span class="token string">&#39;umi dev&#39;</span><span class="token punctuation">,</span>\n      port<span class="token operator">:</span> <span class="token number">8000</span><span class="token punctuation">,</span>\n      env<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token constant">APP_ROOT</span><span class="token operator">:</span> process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;/app/web&#39;</span><span class="token punctuation">,</span>\n        <span class="token constant">BROWSER</span><span class="token operator">:</span> <span class="token string">&#39;none&#39;</span><span class="token punctuation">,</span>\n        <span class="token constant">ESLINT</span><span class="token operator">:</span> <span class="token string">&#39;none&#39;</span><span class="token punctuation">,</span>\n        <span class="token constant">SOCKET_SERVER</span><span class="token operator">:</span> <span class="token string">&#39;http://127.0.0.1:8000&#39;</span><span class="token punctuation">,</span>\n        <span class="token constant">PUBLIC_PATH</span><span class="token operator">:</span> <span class="token string">&#39;http://127.0.0.1:8000&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token comment">// add your user config here</span>\n  <span class="token keyword">const</span> userConfig <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token comment">// myAppName: &#39;egg&#39;,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    <span class="token operator">...</span>config<span class="token punctuation">,</span>\n    <span class="token operator">...</span>userConfig<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n</code></pre></div><p>关于asset的配置可以查看<a href="https://github.com/eggjs/egg-view-assets/blob/master/config/config.default.js" target="_blank" rel="noopener noreferrer">egg-view-assets/config.default.js at master · eggjs/egg-view-assets (github.com)</a>了解详情</p><p>配置 <code>plugin.js</code></p><div class="language-js"><pre><code><span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span>\n\n<span class="token comment">/** @type Egg.EggPlugin */</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// had enabled by egg</span>\n  <span class="token comment">// static: {</span>\n  <span class="token comment">//   enable: true,</span>\n  <span class="token comment">// }</span>\n  assets<span class="token operator">:</span> <span class="token punctuation">{</span>\n    enable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token keyword">package</span><span class="token operator">:</span> <span class="token string">&#39;egg-view-assets&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  nunjucks<span class="token operator">:</span> <span class="token punctuation">{</span>\n    enable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token keyword">package</span><span class="token operator">:</span> <span class="token string">&#39;egg-view-nunjucks&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n</code></pre></div><h2 id="修改路由"><a class="header-anchor" href="#修改路由" aria-hidden="true">#</a> 修改路由</h2><p>编辑<code>app</code>目录下的<code>router.js</code></p><p><code>\\</code>改为<code>*</code>确保默认访问的路由都将指向前端umi的路由</p><div class="language-js"><pre><code><span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span>\n\n<span class="token comment">/**\n * @param {Egg.Application} app - egg application\n */</span>\nmodule<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token parameter">app</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> router<span class="token punctuation">,</span> controller <span class="token punctuation">}</span> <span class="token operator">=</span> app<span class="token punctuation">;</span>\n  router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;*&#39;</span><span class="token punctuation">,</span> controller<span class="token punctuation">.</span>home<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n</code></pre></div><p>修改controller</p><div class="language-js"><pre><code><span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> Controller <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;egg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Controller<span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">HomeController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span> <span class="token punctuation">{</span>\n  <span class="token keyword">async</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&#39;index.html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> HomeController<span class="token punctuation">;</span>\n\n</code></pre></div><h2 id="启动"><a class="header-anchor" href="#启动" aria-hidden="true">#</a> 启动</h2><div class="language-bash"><pre><code><span class="token function">yarn</span> dev \n</code></pre></div><p>即可看到运行成功的前端页面了,于此可以在egg中写后端逻辑,在umi中写前端页面</p><h2 id="部署"><a class="header-anchor" href="#部署" aria-hidden="true">#</a> 部署</h2><p>部署比启动来说要复杂一些,需要看懂文档所想表达的意思才行.</p><p>配置umi的配置选项</p><div class="language-js"><pre><code><span class="token keyword">import</span> path <span class="token keyword">from</span> <span class="token string">&#39;path&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;umi&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  nodeModulesTransform<span class="token operator">:</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> <span class="token string">&#39;none&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  routes<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> <span class="token string">&#39;@/pages/index&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  fastRefresh<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  runtimePublicPath<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  outputPath<span class="token operator">:</span><span class="token string">&#39;./app/public&#39;</span><span class="token punctuation">,</span>\n  publicPath<span class="token operator">:</span><span class="token string">&#39;/public/&#39;</span><span class="token punctuation">,</span>\n  manifest<span class="token operator">:</span><span class="token punctuation">{</span>\n    fileName<span class="token operator">:</span>  path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;/config/manifest.json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">//自动发送至config下,asset模版要靠这个解析资源路径</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre></div><p>config配置参考之前的注释,在packag.json中加入<code>&quot;build&quot;: &quot; umi build&quot;,</code></p><div class="language-bash"><pre><code><span class="token function">yarn</span> build\n<span class="token function">yarn</span> start\n</code></pre></div><h2 id="参考"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2><p><a href="https://github.com/eggjs/examples/tree/master/assets-with-umi" target="_blank" rel="noopener noreferrer">examples/assets-with-umi at master · eggjs/examples (github.com)</a></p><p><a href="https://juejin.cn/post/6889243469136297998" target="_blank" rel="noopener noreferrer">egg中如何使用umi的项目 - 掘金 (juejin.cn)</a></p><p><a href="https://github.com/nianiaJR/assets-with-webpack" target="_blank" rel="noopener noreferrer">nianiaJR/assets-with-webpack (github.com)</a></p><p><a href="https://eggjs.org/zh-cn/tutorials/assets.html?#%E4%BD%BF%E7%94%A8-assets-%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E" target="_blank" rel="noopener noreferrer">静态资源 - 为企业级框架和应用而生 (eggjs.org)</a></p>',36);t.render=function(a,p,t,e,c,l){return n(),s("div",null,[o])};export default t;export{p as __pageData};
